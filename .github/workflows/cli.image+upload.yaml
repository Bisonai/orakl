name: CLI Deploy to Amazon ECR

on:
  push:
    branches:
      - master
    paths:
      - "cli/**"
  workflow_dispatch:

env:
  ecr_url: public.ecr.aws/bisonai/orakl-cli

jobs:
  prepare:
    name: Prepare Build
    runs-on: ubuntu-latest

    outputs:
      tag_date: ${{ steps.tag.outputs.date }}
      tag_git_hash: ${{ steps.tag.outputs.git_hash }}
      version: ${{ steps.package.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Get time TAG
        id: tag
        run: |
          echo "date=$(date +'%Y%m%d.%H%M')" >> $GITHUB_OUTPUT
          echo "git_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Get package version
        id: package
        run: |
          echo "version=$(node -p -e "require('./cli/package.json').version")" >> $GITHUB_OUTPUT

  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   needs: prepare

  #   permissions:
  #     id-token: write
  #     contents: read

  #   outputs:
  #     tag_date: ${{ steps.tag.outputs.date }}
  #     tag_git_hash: ${{ steps.tag.outputs.git_hash }}
  #     img_tag: ${{ steps.img-tag.outputs.img_tag }}

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Docker build orakl-cli
  #       run: SERVICE_NAME=orakl-cli docker compose -f docker-compose.build.yaml build

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-region: us-east-1
  #         role-to-assume: ${{ secrets.ROLE_ARN }}

  #     - name: Login to Amazon ECR
  #       id: login-ecr-public
  #       uses: aws-actions/amazon-ecr-login@v1
  #       with:
  #         registry-type: public

  #     - name: Publish Image to ECR(cli)
  #       run: |
  #         docker tag orakl-cli ${{ env.ecr_url }}:latest
  #         docker push ${{ env.ecr_url }}:latest
  #         docker tag ${{ env.ecr_url }}:latest ${{ env.ecr_url }}:v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}
  #         docker push ${{ env.ecr_url }}:v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}

  #     - name: Get image tag
  #       id: img-tag
  #       run: echo "img_tag=v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}" >> $GITHUB_OUTPUT

  update_image_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gitops
        run: |
          echo Checking out ${GITHUB_SERVER_URL}/bisonai/orakl-helm-charts.git
          rm -rf ./gitops_tmp

          GH_URL=$(echo "$GITHUB_SERVER_URL" | sed 's,://,://x-access-token:'"${{ secrets.PAT }}"'@,g')
          git clone --depth 1 ${GH_URL}/bisonai/orakl-helm-charts.git ./gitops_tmp

        shell: bash

      - name: Verify and Checkout Branch
        run: |
          cd ./gitops_tmp/
          git fetch --all
          if git show-ref --quiet refs/heads/idc-fly; then
            git checkout idc-fly
          else
            echo "Branch idc-fly does not exist. Exiting."
            exit 1
          fi

        shell: bash

      - name: Update image tag in multiple values.baobab.yaml files
        run: |
          cd ./gitops_tmp/cli/

          echo "Updating image tag in values.baobab.yaml files"
          sed -i 's/tag: .*$/tag: "v0.6.1.20240315.0618.c907cbb"/g' values.baobab.yaml

          echo "Update App Version in Chart.yaml"
          sed -i 's/appVersion: .*$/appVersion: "v.2.4"/g' Chart.yaml

        shell: bash

      - name: Commit and Push Changes
        run: |
          cd ./gitops_tmp/
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add .
          git commit -m 'Update image tag and app version'
          git push origin idc-fly

        shell: bash
