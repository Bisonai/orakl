name: CLI Deploy to Amazon ECR

on:
  push:
    branches:
      - master
    paths:
      - "cli/**"
  workflow_dispatch:

env:
  ecr_url: public.ecr.aws/bisonai/orakl-cli

jobs:
  prepare:
    name: Prepare Build
    runs-on: ubuntu-latest

    outputs:
      tag_date: ${{ steps.tag.outputs.date }}
      tag_git_hash: ${{ steps.tag.outputs.git_hash }}
      version: ${{ steps.package.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Get time TAG
        id: tag
        run: |
          echo "date=$(date +'%Y%m%d.%H%M')" >> $GITHUB_OUTPUT
          echo "git_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Get package version
        id: package
        run: |
          echo "version=$(node -p -e "require('./cli/package.json').version")" >> $GITHUB_OUTPUT

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: prepare

    permissions:
      id-token: write
      contents: read

    outputs:
      tag_date: ${{ steps.tag.outputs.date }}
      tag_git_hash: ${{ steps.tag.outputs.git_hash }}
      img_tag: ${{ steps.img-tag.outputs.img_tag }}

    steps:
      - uses: actions/checkout@v3

      - name: Docker build orakl-cli
        run: SERVICE_NAME=orakl-cli docker compose -f docker-compose.build.yaml build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Publish Image to ECR(cli)
        run: |
          docker tag orakl-cli ${{ env.ecr_url }}:latest
          docker push ${{ env.ecr_url }}:latest
          docker tag ${{ env.ecr_url }}:latest ${{ env.ecr_url }}:v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}
          docker push ${{ env.ecr_url }}:v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}

      - name: Get image tag
        id: img-tag
        run: echo "img_tag=v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}" >> $GITHUB_OUTPUT

  update-image-tag:
    name: Update Image Tag
    runs-on: ubuntu-latest
    needs: [prepare, build]

    permissions:
      id-token: write
      contents: read 

    steps:

    - name: checkout gitops
      run: |
        echo Checking out ${GITHUB_SERVER_URL}/bisonai/orakl-helm-charts.git
        rm -rf ./gitops_tmp

        GH_URL=$(echo "$GITHUB_SERVER_URL" | sed 's,://,://x-access-token:'"${{ secrets.PAT }}"'@,g')
        git clone --depth 1 ${GH_URL}/bisonai/orakl-helm-charts.git ./gitops_tmp

      shell: bash

    - name: Update image tag in multiple values.baobab.yaml files
      run: |

        cd ./gitops_tmp/cli/   

        for entry in "./*"
        do
          echo "$entry"
        done

        echo "Updating image tag in values.baobab.yaml files"

        sed -i 's/tag: .*$/tag: "'${{ needs.build.outputs.img_tag }}'"/g' "baobab.values.yaml"

        echo "Update App Version in Chart.yaml"
        sed -i 's/appVersion: .*$/appVersion: "'${{ needs.build.outputs.version }}'"/g' "Chart.yaml"

      shell: bash

    - name: Push changes to gitops
      working-directory: ./gitops_tmp
      run: |
        echo Pushing changes to orakl-helm-charts
        git config user.name "GitHub Actions"
        git config user.email "infra@bisonai.com"     
        git stash
        git pull origin main
        git stash pop          
        git add .
        git commit --allow-empty -m "Deploy \"${{ needs.build.outputs.img_tag }}\" imag tag update for \"cli\" project
        git push -u origin main
      shell: bash