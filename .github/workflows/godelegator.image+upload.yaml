name: Go Delegator Deploy to Amazon ECR

on:
  push:
    branches:
      - master
    paths:
      - "go-delegator/**"
env:
  ecr_url: public.ecr.aws/bisonai/orakl-godelegator

jobs:
  prepare:
    name: Prepare Build
    runs-on: ubuntu-latest

    outputs:
      tag_date: ${{ steps.tag.outputs.date }}
      tag_git_hash: ${{ steps.tag.outputs.git_hash }}
      version: ${{ steps.package.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Get time TAG
        id: tag
        run: |
          echo "date=$(date +'%Y%m%d.%H%M')" >> $GITHUB_OUTPUT
          echo "git_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Get package version
        id: package
        run: |
          version=$(cat "./go-delegator/.version")
          echo "version=${version}" >> $GITHUB_OUTPUT
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: prepare

    permissions:
      id-token: write
      contents: read

    outputs:
      tag_date: ${{ steps.tag.outputs.date }}
      tag_git_hash: ${{ steps.tag.outputs.git_hash }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.5"
          check-latest: true
          cache-dependency-path: |
            ./go-delegator/go.sum

      - name: Run lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
          working-directory: go-delegator
          skip-pkg-cache: true
          skip-build-cache: true
          args: --timeout=10m --skip-dirs=tests

      - name: Run vet
        run: |
          cd ./go-delegator
          go install golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow@latest
          go vet
          go vet -vettool=$(which shadow)

      - name: Docker build orakl-godelegator
        run: SERVICE_NAME=orakl-godelegator docker-compose -f docker-compose.build.yaml build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Publish Image to ECR(delegator)
        run: |
          docker tag orakl-godelegator ${{ env.ecr_url }}:v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}
          docker push ${{ env.ecr_url }}:v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}

  create-helmchart-pr:
    name: create-pr-helmchart
    runs-on: ubuntu-latest
    needs: prepare

    strategy:
      matrix:
        environment: ["baobab", "cypress"]
        include:
          - environment: "baobab"
            base: "gcp-baobab-prod"
          - environment: "cypress"
            base: "gcp-cypress-prod"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: "Bisonai/orakl-helm-charts"
          token: ${{ secrets.PAT }} # Personal Access Token with repo scope

      - name: Install YQ
        uses: dcarbone/install-yq-action@v1.1.1

      - name: Create new branch and make changes
        run: |
          git checkout ${{ matrix.base }}
          git pull
          git checkout -b feat/${{ matrix.environment }}-delegator-v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}
          yq eval '.global.image.tag = "v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}"' -i ./godelegator/values.yaml
          yq eval '.appVersion = "${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}"' -i ./godelegator/Chart.yaml
          git add .
          git commit -m "feat: deploy v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}"

      - name: Push changes and create PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          title: "deploy ${{ matrix.environment }}-delegator-v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}"
          body: "${{ matrix.environment }}-delegator-v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}"
          branch: "feat/${{ matrix.environment }}-delegator-v${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}"
          base: "${{ matrix.base }}"
