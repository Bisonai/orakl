generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transaction {
  id          BigInt  @id @default(autoincrement()) @map("transaction_id")
  from        String  @db.VarChar(42)
  to          String  @db.VarChar(42)
  input       String  @db.VarChar(1024)
  gas         String  @db.VarChar(20)
  value       String  @db.VarChar(20)
  chainId     String  @db.VarChar(20)
  gasPrice    String  @db.VarChar(20)
  nonce       String  @db.VarChar(20)
  v           String  @db.VarChar(66)
  r           String  @db.VarChar(66)
  s           String  @db.VarChar(66)
  rawTx       String  @db.VarChar(1024)
  signedRawTx String? @db.VarChar(1024)

  @@map("transactions")
}

model Organization {
  id   BigInt @id @default(autoincrement()) @map("organization_id")
  name String @unique @db.VarChar(50)

  Reporter Reporter[]

  @@map("organizations")
}

model Contract {
  id       BigInt     @id @default(autoincrement()) @map("contract_id")
  address  String     @unique @db.VarChar(42)
  Function Function[]
  Reporter Reporter[]

  @@map("contracts")
}

model Function {
  id          BigInt   @id @default(autoincrement())
  name        String   @db.VarChar(100)
  encodedName String   @db.VarChar(10)
  contract    Contract @relation(fields: [contractId], references: [id])
  contractId  BigInt   @map("contract_id")

  @@map("functions")
}

model Reporter {
  id             BigInt       @id @default(autoincrement())
  address        String       @unique @db.VarChar(42)
  contract       Contract     @relation(fields: [contractId], references: [id])
  contractId     BigInt       @map("contract_id")
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId BigInt       @map("organization_id")

  @@map("reporters")
}
