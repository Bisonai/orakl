// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chain {
  id         BigInt       @id @default(autoincrement()) @map("chain_id")
  name       String       @unique
  Aggregator Aggregator[]
  Listener   Listener[]
  VrfKey     VrfKey[]
  Reporter   Reporter[]

  @@map("chains")
}

model Service {
  id       BigInt     @id @default(autoincrement()) @map("service_id")
  name     String     @unique
  Listener Listener[]
  Reporter Reporter[]

  @@map("services")
}

model Listener {
  id        BigInt  @id @default(autoincrement()) @map("listener_id")
  address   String  @db.VarChar(42)
  eventName String  @map("event_name") @db.VarChar(255)
  chain     Chain   @relation(fields: [chainId], references: [id])
  chainId   BigInt  @map("chain_id")
  service   Service @relation(fields: [serviceId], references: [id])
  serviceId BigInt  @map("service_id")

  @@map("listeners")
}

model VrfKey {
  id      BigInt @id @default(autoincrement()) @map("vrf_key_id")
  sk      String @db.VarChar(64)
  pk      String @db.VarChar(130)
  pkX     String @map("pk_x") @db.VarChar(77)
  pkY     String @map("pk_y") @db.VarChar(77)
  keyHash String @map("key_hash") @db.VarChar(66)
  chain   Chain  @relation(fields: [chainId], references: [id])
  chainId BigInt @map("chain_id")

  @@map("vrf_keys")
}

model Feed {
  id         BigInt  @id @default(autoincrement()) @map("feed_id")
  name       String
  definition Json
  adapter    Adapter @relation(fields: [adapterId], references: [id], onDelete: Cascade)
  adapterId  BigInt  @map("adapter_id")
  Data       Data[]

  @@map("feeds")
}

model Adapter {
  id          BigInt       @id @default(autoincrement()) @map("adapter_id")
  adapterHash String       @unique @map("adapter_hash")
  name        String
  decimals    Int
  feeds       Feed[]
  Aggregator  Aggregator[]

  @@map("adapters")
}

model Aggregator {
  id                BigInt      @id @default(autoincrement()) @map("aggregator_id")
  aggregatorHash    String      @map("aggregator_hash")
  active            Boolean     @default(false)
  name              String
  address           String      @unique
  heartbeat         Int
  threshold         Float
  absoluteThreshold Float       @map("absolute_threshold")
  Data              Data[]
  adapter           Adapter     @relation(fields: [adapterId], references: [id])
  adapterId         BigInt      @map("adapter_id")
  chain             Chain       @relation(fields: [chainId], references: [id])
  chainId           BigInt      @map("chain_id")
  Aggregate         Aggregate[]

  @@unique([aggregatorHash, chainId])
  @@map("aggregators")
}

model Data {
  id           BigInt      @id @default(autoincrement()) @map("data_id")
  timestamp    DateTime    @db.Timestamptz
  value        BigInt
  aggregator   Aggregator @relation(fields: [aggregatorId], references: [id], onDelete: Cascade)
  aggregatorId BigInt     @map("aggregator_id")
  feed         Feed        @relation(fields: [feedId], references: [id])
  feedId       BigInt      @map("feed_id")

  @@map("data")
}

model Aggregate {
  id           BigInt      @id @default(autoincrement()) @map("aggregate_id")
  timestamp    DateTime    @db.Timestamptz
  value        BigInt
  aggregator   Aggregator @relation(fields: [aggregatorId], references: [id], onDelete: Cascade)
  aggregatorId BigInt     @map("aggregator_id")

  @@index([aggregatorId, timestamp(sort: Desc)])
  @@map("aggregates")
}

model Reporter {
  id            BigInt  @id @default(autoincrement()) @map("reporter_id")
  address       String  @db.VarChar(42)
  privateKey    String  @db.VarChar(66)
  oracleAddress String  @db.VarChar(42)
  chain         Chain   @relation(fields: [chainId], references: [id])
  chainId       BigInt  @map("chain_id")
  service       Service @relation(fields: [serviceId], references: [id])
  serviceId     BigInt  @map("service_id")

  @@unique([address, chainId, serviceId])
  @@map("reporters")
}
