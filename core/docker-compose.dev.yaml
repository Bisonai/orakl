version: '3.7'

# networks:
#   app-network:
#     driver: bridge

services:
  # redis:
  #   context: .
  #   dockerfile: redis/Dockerfile.dev
  #   container_name: redis_dev
  #   hostname: redis_dev
  # expose:
  #   - 6379

  listener:
    build:
      context: .
      dockerfile: src/listener/Dockerfile.dev
      args:
        NPM_TOKEN: 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
    container_name: listener_dev
    hostname: listener_dev
    expose:
      - 8545

  # worker:
  #   context: .
  #   dockerfile: worker/Dockerfile.dev
  #   container_name: worker_dev
  #   hostname: worker_dev

  # reporter:
  #   context: .
  #   dockerfile: reporter/Dockerfile.dev
  #   container_name: reporter_dev
  #   hostname: reporter_dev











  # fastapi:
  #   build:
  #     context: .
  #     dockerfile: backend/provider/Dockerfile.dev
  #   container_name: fastapi_dev
  #   hostname: fastapi_dev
  #   environment:
  #     - NEVEREST_TAG
  #     - MONGO_DB_USERNAME_READ
  #     - MONGO_DB_PASSWORD_READ
  #     - MONGO_DB_USERNAME_WRITE
  #     - MONGO_DB_PASSWORD_WRITE
  #     - MONGO_DB_CLUSTER
  #     - STAGE
  #     - MODULE_NAME=provider_api
  #     - VARIABLE_NAME=app
  #     - UVICORN_PORT=80
  #     - UVICORN_HOST=0.0.0.0
  #     - UVICORN_RELOAD=true
  #   volumes:
  #     - ./backend/common:/app/common
  #     - ./backend/provider:/app/provider
  #     - ./backend/provider_api.py:/app/provider_api.py
  #   expose:
  #     - 80
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost/api/health"]
  #     start_period: 10s
  #     retries: 3
  #     timeout: 10s
  #     interval: 30s


  # nextjs:
  #   build:
  #     context: .
  #     dockerfile: nextjs/Dockerfile.dev
  #   container_name: nextjs_dev
  #   hostname: nextjs_dev
  #   environment:
  #     - X_NEVEREST_API_KEY
  #     - HOST_URL
  #     - BACKEND_CONTAINER_URL
  #     - PORT=3000
  #   volumes:
  #     - ./nextjs/pages:/app/pages
  #     - ./nextjs/public:/app/public
  #     - ./nextjs/styles:/app/styles
  #     - ./nextjs/src:/app/src
  #   expose:
  #     - 3000
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3000"]  # FIXME setup health endpoint
  #     start_period: 10s
  #     retries: 3
  #     timeout: 10s
  #     interval: 30s

  # nginx:
  #   # nginx:1.21.6-alpine
  #   image: nginx@sha256:050385609d832fae11b007fbbfba77d0bba12bf72bc0dca0ac03e09b1998580f
  #   container_name: nginx_dev
  #   hostname: nginx_dev
  #   command: [ "nginx-debug", "-g", "daemon off;" ]
  #   ports:
  #     - 80:80
  #   volumes:
  #     - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - nextjs
  #     - fastapi
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost/health"]
  #     start_period: 10s
  #     retries: 3
  #     timeout: 10s
  #     interval: 30s
