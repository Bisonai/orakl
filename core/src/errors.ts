export class OraklError extends Error {
  constructor(public readonly code: OraklErrorCode, message?: string, public readonly value?) {
    super(message)
    this.name = OraklErrorCode[code]
    this.value = value
    Object.setPrototypeOf(this, new.target.prototype)
  }
}

export enum OraklErrorCode {
  NonExistentEventError = 10000,
  AggregatorJobCanTakeMoreBreak,
  FailedToGetAggregate,
  FailedToGetAggregator,
  FailedToStoreErrorMsg,
  GetListenerRequestFailed,
  GetReporterRequestFailed,
  GetVrfConfigRequestFailed,
  IndexOutOfBoundaries,
  InvalidAdapter,
  InvalidAggregator,
  InvalidDataFeed,
  InvalidDataFeedFormat,
  InvalidDecodedMesssageLength,
  InvalidListenerConfig,
  InvalidOperator,
  InvalidReducer,
  MissingAdapter,
  MissingAggregator,
  MissingJsonRpcProvider,
  MissingKeyInJson,
  MissingKeyValuePair,
  MissingMnemonic,
  NoListenerFoundGivenRequirements,
  ProviderNetworkError,
  TxCannotEstimateGasError,
  TxInvalidAddress,
  TxNotMined,
  TxProcessingResponseError,
  UndefinedAggregator,
  UndefinedListenerRequested,
  UnexpectedNumberOfJobsInQueue,
  UnexpectedQueryOutput,
  UniformWrongParams,
  ListenerNotRemoved,
  ListenerNotAdded,
  ReporterNotRemoved,
  ReporterNotAdded,
  WalletNotActive,
  UnexpectedNumberOfDeadlockJobs,
  NonEligibleToSubmit,
  AggregatorNotRemoved,
  AggregatorNotAdded,
  TxMissingResponseError,
  TxTransactionFailed,
  AggregatorNotFoundInState,
  ListenerNotFoundInState,
  ReporterNotFoundInState,
  UnknownRequestResponseJob,
  MissingSignedRawTx,
  CaverTxTransactionFailed,
  DelegatorServerIssue,
  FailedInsertData,
  FailedInsertAggregatedData,
  AxiosBadOptionValue,
  AxiosBadOption,
  AxiosTimeOut,
  AxiosNetworkError,
  AxiosTooManyRedirects,
  AxiosDeprecated,
  AxiosBadResponse,
  AxiosBadRequest,
  AxiosCanceledByUser,
  AxiosNotSupported,
  AxiosInvalidUrl,
  FailedToConnectAPI,
  FailedToGetUnprocessedBlocks,
  FailedToGetObservedBlock,
  FailedUpsertObservedBlock,
  FailedInsertUnprocessedBlock,
  FailedDeleteUnprocessedBlock,
  NonceNotFound,
  TxNonceExpired
}
